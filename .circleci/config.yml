# This config was automatically generated from your source code
# Stacks detected: deps:java:RealTimeSensorDataAnalyticsBackend,deps:node:sensor_analytics_frontend,tool:gradle:
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  build-node:
    # Build node project
    executor: node/default
    working_directory: ~/project/sensor_analytics_frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Set CI environment variable to false
          command: echo 'export CI=false' >> $BASH_ENV
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  build-java:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/project/RealTimeSensorDataAnalyticsBackend
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          command: ./gradlew build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/javaArtifacts
      # Copy output to artifacts dir
      - run:
          name: Copy javaArtifacts
          command: cp -R build/libs/*.jar ~/javaArtifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/javaArtifacts
          destination: java-build
  build-and-push:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      # Install Docker Compose
      - run:
          name: Install Docker Compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      - run:
          name: Build the Java Jars
          command: |
            cd RealTimeSensorDataAnalyticsBackend && ./gradlew build && cd ..
      - run:
          name: Test the Jar exists
          command: |
            ls RealTimeSensorDataAnalyticsBackend/build/libs
      - run:
          name: Run the docker compose up command
          command: |
            docker-compose --env-file dockerConfig.env build
      - run:
          name: check the docker images
          command: |
            docker images
      - run:
          name: Authenticate with Docker Hub
          command: |
            echo "$DOCKERHUB_TOKEN" | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Tag docker images frontend
          command: |
            docker tag project-frontend:latest laxvadnala/realtimeanalytics-frontend:latest
            docker tag project-backend:latest laxvadnala/realtimeanalytics-backend:latest
            docker push laxvadnala/realtimeanalytics-backend:latest
            docker push laxvadnala/realtimeanalytics-frontend:latest

workflows:
  build-and-test:
    jobs:
      - build-node
      - build-java
      - build-and-push:
          requires:
            - build-node
            - build-java

