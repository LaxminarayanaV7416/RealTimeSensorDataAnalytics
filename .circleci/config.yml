# This config was automatically generated from your source code
# Stacks detected: deps:java:RealTimeSensorDataAnalyticsBackend,deps:node:sensor_analytics_frontend,tool:gradle:
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    working_directory: ~/project/sensor_analytics_frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm test --passWithNoTests
  build-node:
    # Build node project
    executor: node/default
    working_directory: ~/project/sensor_analytics_frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Set CI environment variable to false
          command: echo 'export CI=false' >> $BASH_ENV
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  test-java:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/project/RealTimeSensorDataAnalyticsBackend
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          command: ./gradlew test
      - store_test_results:
          path: build/test-results
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.gradle/caches
      - store_artifacts:
          path: build/reports
  build-java:
    docker:
      - image: cimg/openjdk:17.0
    working_directory: ~/project/RealTimeSensorDataAnalyticsBackend
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Calculate cache key
          command: |-
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          command: ./gradlew build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/javaArtifacts
      # Copy output to artifacts dir
      - run:
          name: Copy javaArtifacts
          command: cp -R build/libs/*.jar ~/javaArtifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/javaArtifacts
          destination: java-build
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
            - test-java
      - test-java
      - build-java:
          requires:
            - test-node
            - test-java
    # - deploy:
    #     requires:
    #       - build-node
